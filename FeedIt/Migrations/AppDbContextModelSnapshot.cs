// <auto-generated />
using System;
using FeedIt.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FeedIt.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FeedIt.Data.Models.Article", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AuthorId");

                    b.Property<string>("Content")
                        .HasMaxLength(1500);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<bool>("IsPublic");

                    b.Property<string>("Title")
                        .HasMaxLength(75);

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("FeedIt.Data.Models.Subscription", b =>
                {
                    b.Property<Guid>("SubscriberId");

                    b.Property<Guid>("SubscriptionTargetId");

                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("SubscriberId", "SubscriptionTargetId");

                    b.HasAlternateKey("Id");

                    b.HasIndex("SubscriptionTargetId");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("FeedIt.Data.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Login")
                        .HasMaxLength(20);

                    b.Property<string>("Password");

                    b.Property<string>("PublicName")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FeedIt.Data.Models.Article", b =>
                {
                    b.HasOne("FeedIt.Data.Models.User", "Author")
                        .WithMany("Articles")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FeedIt.Data.Models.Subscription", b =>
                {
                    b.HasOne("FeedIt.Data.Models.User", "Subscriber")
                        .WithMany("Subscriptions")
                        .HasForeignKey("SubscriberId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FeedIt.Data.Models.User", "SubscriptionTarget")
                        .WithMany("Subscribers")
                        .HasForeignKey("SubscriptionTargetId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
